middleware/misc
    renderMW
middleware/profile
    checkDevLoggedInMW
    retrieveIDMW
middleware/auth
    authMW
    checkLoginMW
    forgottenPwMW
    checkRegisterMW
    checkNewPwMW
    registerMW
    logoutMW
middleware/sprint
    getSprintListMW
    getSprintMW
    editSprintMW
    saveSprintMW
    deleteSprintMW
middleware/dev
    getDevListMW
    getDevByIDMW
    getDevByUsernameMW
    editDevMW
    saveDevMW
    deleteDevMW
middleware/role
    getSprintRoleListMW
    getDevRoleListMW
    getRoleMW
    editRoleMW
    saveRoleMW
    deleteRoleMW

Number of mw's: 27

GET, POST /
    getDevByUsernameMW
    checkLoginMW (
        ha már session szerint be van jelentkezve, next(), else:
        hiba esetén, redirect / és locals.err = "no_match", else:
        session.devID = res.devID, next()
    )
    checkNewPwMW (
        redirect /sprints
                 /newpw és locals.err = ""
    )
    renderMW(index.html)
GET, POST /register
    getDevByUsernameMW
    checkRegisterMW (
        redirect /register és locals.err = "missing_input"
                 /register és locals.err = "already_exists"
    )
    registerMW (itt redirect / locals.err = "")
    renderMW(register.html)
GET /logout
    logoutMW (redirect / és locals.err = "")
GET, POST /forgotten
    getDevByUsernameMW (ha van post)
    forgottenPwMW (ha van post)
    renderMW(forgotten.html)

GET, POST /newpw
    authMW
    checkInputNewPwMW (hiba: redirect /newpw és locals.err = "missing_input")
    saveNewPwMW (redirect /sprints)
    renderMW(newpw.html)

GET /sprints
    authMW
    getSprintListMW (benne getSprintRoleListMW(sprintID) minden sprintre)
    renderMW(sprints.html)
GET /sprints/:sprintID
    authMW
    getSprintMW(sprintID)
    getSprintRoleListMW(sprintID)
    renderMW(sprints.manage.html)
GET, POST /sprints/edit/:sprintID {sprintID, title, reward, startDT, isEnded, endDT, isSuccess}
    authMW
    getSprintMW(sprintID)
    editSprintMW (vagy redirect, vagy next, ha nincs bemenet)
    renderMW(sprints.edit.html)    
GET, POST /sprints/new {title, reward, startDT, isEnded, endDT, isSuccess}
    authMW
    saveSprintMW (vagy redirect, vagy next, ha nincs bemenet)
    renderMW(sprints.create.html)
DELETE /sprints/delete/:sprintID
    authMW
    getSprintRoleListMW(sprintID)
    deleteSprintMW(sprintID) (benne deleteRoleMW(roleID) minden role-ra)

GET, POST /role/edit/:roleID {role}
    authMW
    getRoleMW(roleID)
    editRoleMW (vagy redirect, vagy next, ha nincs bemenet)
    getSprintMW(sprintID)
    getDevByIDMW(devID)
    renderMW(role.edit.html)
GET, POST /role/new/:sprintID {sprintID, devID, role}
    authMW
    saveRoleMW (vagy redirect, vagy next, ha nincs bemenet)
    getSprintMW(sprintID)
    getDevListMW
    renderMW(role.create.html)
DELETE /role/delete/:roleID
    authMW
    deleteRoleMW(roleID)

GET /devs
    authMW
    getDevListMW (benne getDevRoleListMW(devID) minden developerre)
    renderMW(devs.html)
GET /devs/:devID
    authMW
    checkDevLoggedInMW(devID) (redirect /profile, ha a bejelentkezett dev manage-elésére ment)
    getDevByIDMW(devID)
    getDevRoleListMW(devID)
    renderMW(dev.manage.html)
GET, POST /devs/edit/:devID {devID, name, email, username}
    authMW
    getDevByIDMW(devID)
    editDevMW (vagy redirect, vagy next, ha nincs bemenet)
    renderMW(devs.edit.html)
GET, POST /devs/new {name, email, username}
    authMW
    saveDevMW (vagy redirect, vagy next, ha nincs bemenet)
    renderMW(devs.create.html)
DELETE /devs/delete/:devID
    authMW
    getDevRoleListMW(devID)
    deleteDevMW(devID) (benne deleteRoleMW(roleID) minden role-ra)

GET /profile
    authMW
    retrieveIDMW
    getDevByIDMW(devID)
    getDevRoleListMW(devID)
    renderMW(profile.html)
GET, POST /profile/edit/ {devID, name, email, username}
    authMW
    retrieveIDMW
    getDevByIDMW(devID)
    editDevMW (vagy redirect, vagy next, ha nincs bemenet)
    renderMW(devs.edit.html)
DELETE /profile/delete/
    authMW
    retrieveIDMW
    getDevRoleListMW(devID)
    deleteDevMW(devID) (benne deleteRoleMW(roleID) minden role-ra)
    manuálisan: redirect("/") és locals.err = "" és session.destroy()